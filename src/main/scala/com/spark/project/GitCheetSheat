
// Ссылки

Cheat Sheet

https://gist.github.com/hofmannsven/6814451


// Простое добавление

git add .
git commit -m "add some commit"
git push

// force pull

I think this is the right way:

git fetch --all

Then, you have two options:

git reset --hard origin/master

OR If you are on some other branch:

git reset --hard origin/<branch_name>



--------------Увидеть изменения вошедшие в коммит--------------------

1. Узнаем номер коммита

git rev-parse HEAD

2. Смотрим изменения в консоли

git diff ID_COMMIT^!


-------------Управление коммитами------------------------------------------


Отменить последний коммит

git reset --soft HEAD~

Удалить отвалившиеся файлы (untracked)

git clean -f

Переключиться на определенный коммит

git reset --hard COMMIT_ID

Увидеть всю историю коммитов (автор, время, айди, комментарий)

git log

Увидеть детальную историю коммитов (+изменения по коду)

git log -p -2

Увидеть сжатую историю по коммитам

git log --stat

Увидеть историю в красивом формате, в одну строчку

git log --pretty=oneline

Увидеть историю в другом красивом формате, в одну строчку

git log --pretty=format:"%h - %an, %ar : %s"


Установить локальную ветку на последний коммит

git pull --rebase

Добавить только определенный коммит

git cherry-pick COMMIT_ID



-------------------------Работа с бранчами--------------------

1) Посмотреть разницу между бранчами (как внешними так и внутренними в разных комбинациях)
origin - указывает на что это внешний бранч

git diff outSideBranch2 origin/innerBranch



2) Удалить бранч (удаленный или локальный)
git push origin --delete myNewTest
git branch -d outSideBranch2


3) Вывести remote/local бранчи

обновляем инфо об remote бранчах
git remote update origin --prune

выводим инфо об remote и локальных
git branch -a




------------------------Работа с конфликтами------------------------------------------

---------------------------------------------------------------------------------------
1. Кейс - оба коммита в мастер с разных мест
---------------------------------------------------------------------------------------


В данном случае неуспевший коммит за коммиться не может и будет ошибка при push

Необходимо влить внешний коммит в локальное место


git pull --rebase

После чего можно запушить изменения второго коммита

git push

---------------------------------------------------------------------------------------
2. Рабочий Кейс - сливаем локально рабочий бранч в локальный мастер
----------------------------------------------------------------------------------------

2.1. Переключаемся в мастер

git checkout master

2.2. Делаем мердж рабочей ветки в мастер

git merge innerBranch

2.3. Пушим в удаленную ветку и получаем конфликт,
 т.к. локальный мастер уже не соответствует внешнему

git push

2.4. Пытаемся сделать rebase и снова получаем конфликт

git pull --rebase

После чего, если из идеа - правим как должно быть прямо в среде разработки

2.5. Локально фиксируем решение конфликта

git add ChatBotForMonitoringVault.py

git rebase --continue

2.6. Пушим во вне

git push



---------------------------------------------------------------------------------------
3. Рабочий Кейс - сливаем локально рабочий бранч в локальный мастер из консоли
----------------------------------------------------------------------------------------




2.1. Переключаемся в мастер

git checkout master

2.2. Делаем мердж рабочей ветки в мастер

git merge innerBranch

2.3. Пушим в удаленную ветку и получаем конфликт,
 т.к. локальный мастер уже не соответствует внешнему

git push

2.4. Пытаемся сделать rebase и снова получаем конфликт

git pull --rebase

После чего, если из идеа - правим как должно быть прямо в среде разработки

2.5. Локально фиксируем решение конфликта

git add ChatBotForMonitoringVault.py

git rebase --continue

2.6. Коммитимся

git commit -m "some commit"

2.7. Делаем пуш

git push


---------------------------------------------------------------------------------------
4. Рабочий Кейс - коммитимся в удаленный репозиторий, через удаленные бранчи
----------------------------------------------------------------------------------------

4.0. Создаем локальную копию бранча

git checkout -b FinalTest

4.1. Создаем внешнюю копию рабочего бранча

git push -u origin feature_branch_name

4.2. Локально добавляем изменения

git add .

4.3. Коммитимся

git commit -m "add final test"

4.4. Пушим

git push

4.5. Для добавления новой ветки в мастер делаем

4.5.1 Переключаемся во внешний мастер

git checkout origin/master

4.5.2 Запускаем пулл реквест на мердж внешнего нового бранча и бранча и мастера

git merge origin/FinalTest

После чего открывается пулл реквест который можно решить через GUI или из терминала

4.5.3. Решаем из терминала

git push origin HEAD:master


















